% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_data.R
\name{generate_data}
\alias{generate_data}
\title{Generate realistic datasets}
\usage{
generate_data(
  n,
  m,
  model_mean,
  covariance,
  model_noise,
  lambda,
  p = 0.2,
  k = 1
)
}
\arguments{
\item{n}{Number of curves to generate.}

\item{m}{Mean number of observation points per curve.}

\item{model_mean}{\code{\link[glmnet]{glmnet}} model for the mean curve.}

\item{covariance}{Matrix for the covariance surface.}

\item{model_noise}{Object of class 'gam' from the function \code{learn_noise}.}

\item{lambda}{Value of the penalty parameter for the mean curve.}

\item{p}{Uncertainty for the number of observation per curve, default=0.2.}

\item{k}{Multiplicative factor for the noise variance, default=1.}
}
\value{
List containing \code{n} entries. Each of the entry represents a
simulated curve as another list with three entries:
\itemize{
\item \strong{$t} the sampling points.
\item \strong{$x} the observed points.
\item \strong{$x_true} the observed points without noise.
}
}
\description{
This function generates realistic irregularly sampled functional
dataset given mean and covariance functions.
}
\details{
The data are generated as

\deqn{X = \mu + \Sigma u + \epsilon,}

where \eqn{\mu} is the mean function, \eqn{\Sigma} is the square-root of the
covariance matrix, \eqn{u} and \eqn{\epsilon} are random normal variables.
Heteroscedasticity is allowed using the \code{coefs} parameter.
}
\examples{
\dontrun{
if(interactive()){
 attach(powerconsumption)
 mod <- learn_mean(df = powerconsumption, k = 50)
 cov <- learn_covariance(powerconsumption, 'lm')
 coefs <- learn_noise(df = powerconsumption)
 df <- generate_data(n = 10, m = 40, model_mean = mod, covariance = cov,
                     coefs = coefs, lambda = exp(-3.5), p = 0.2)
 }
}
}
\seealso{
\code{\link[purrr]{map}},\code{\link[purrr]{map2}}
\code{\link[stats]{Uniform}},\code{\link[stats]{Normal}}
\code{\link[MASS]{mvrnorm}}
}
